/*==============================================================================
Description:
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************
#include "stdafx.h"

#define  _BACKENDINTERFACETHREAD_CPP_
#include "backendInterfaceThread.h"

namespace BackEnd
{

//******************************************************************************
//******************************************************************************
//******************************************************************************

InterfaceThread::InterfaceThread()
{
   // Set base class variables.
   BaseClass::setThreadName("Timer");
   BaseClass::setThreadPrintLevel(TS::PrintLevel(3, 3));

   // Set base class variables.
// BaseClass::setThreadPriorityHigh();
// BaseClass::mThreadSingleProcessor = 3;

   // Set timer period
   BaseClass::mTimerPeriod = 1000;

   // Members
   mTPFlag = true;
   mTimerCallbackFlag = false;

}

//******************************************************************************
//******************************************************************************
//******************************************************************************

void InterfaceThread::threadInitFunction()
{
   Prn::print(Prn::View21, "TIMER INIT");
}

//******************************************************************************
//******************************************************************************
//******************************************************************************

void InterfaceThread::threadExitFunction()
{
   Prn::print(Prn::View21, "TIMER EXIT");
}

//******************************************************************************
//******************************************************************************
//******************************************************************************

void InterfaceThread::shutdownThread()
{
   mTimerCallbackFlag = false;
   BaseClass::shutdownThread();
}

//******************************************************************************
//******************************************************************************
//******************************************************************************

void InterfaceThread::setTimerCallback(std::function<void(int)> aFunction)
{
   mTimerCallback = aFunction;
   mTimerCallbackFlag = true;
}

void InterfaceThread::resetTimerCallback()
{
   mTimerCallbackFlag = false;
}

//******************************************************************************
//******************************************************************************
//******************************************************************************

void InterfaceThread::executeOnTimer(int aTimeCount)
{
   if (!mTPFlag) return;
   
   Prn::print(Prn::View21, "TIMER %5d", aTimeCount);

   // If the timer callback is valid then call it.
   if (mTimerCallbackFlag)
   {
      mTimerCallback(aTimeCount);
   }
}

//******************************************************************************
//******************************************************************************
//******************************************************************************
}//namespace